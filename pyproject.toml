[tool.ruff]
line-length = 120
target-version = "py311"
lint.select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8 - async, bandit, bugbear, builtins, commas, comprehensions
    "ASYNC",
    "S",
    "B",
    "A",
    "COM",
    "C4",
    # flake8 - implicit-str-concat, import-conventions, logging-format, print, pyi, pytest-style
    "ISC",
    "ICN",
    "G",
    "T20",
    "PYI",
    "PT",
    # flake8 - quotes, return, self, simplify, tidy-imports
    "Q",
    "RET",
    "SLF",
    "SIM",
    "TID",
    # Pylint
    "PL",
]
lint.extend-ignore = [
    "PLR2004", "PLR0913", "S311", "SIM117", "Q000", "Q001", "Q003", "ISC001", "COM812", "SIM105", "S110"
]
lint.fixable = ["ALL"]
show-fixes = true
include = ["*.py"]
exclude = [
    ".git",
    ".idea",
    ".venv",
    "venv",
    ".mypy_cache",
    ".ruff_cache",
    ".pytest_cache",
    ".pytype",
    "__pypackages__",
    "_build",
    "build",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "S105", # Possible hardcoded password
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLW0603",
]